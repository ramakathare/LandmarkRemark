<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - LandmarkRemark_Web</title>
    <base href="~/" />
    @*<script>
        if (typeof Object.assign != 'function') {
            // Must be writable: true, enumerable: false, configurable: true
            Object.defineProperty(Object, "assign", {
                value: function assign(target, varArgs) { // .length of function is 2
                    'use strict';
                    if (target == null) { // TypeError if undefined or null
                        throw new TypeError('Cannot convert undefined or null to object');
                    }

                    var to = Object(target);

                    for (var index = 1; index < arguments.length; index++) {
                        var nextSource = arguments[index];

                        if (nextSource != null) { // Skip over if undefined or null
                            for (var nextKey in nextSource) {
                                // Avoid bugs when hasOwnProperty is shadowed
                                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
                                    to[nextKey] = nextSource[nextKey];
                                }
                            }
                        }
                    }
                    return to;
                },
                writable: true,
                configurable: true
            });
        }


        if (typeof Object.values != 'function') {

            Object.prototype.values = function () {
                return Object.keys(this).map(function (key) { return this[key]; })

            }

            //Object.defineProperty(Object, "values", {
            //    value: function values() { // .length of function is 2
            //        'use strict';
            //        if (target == null) { // TypeError if undefined or null
            //            throw new TypeError('Cannot convert undefined or null to object');
            //        }

            //        return Object.keys(O).map(function (key) { return O[key]; })
            //    },
            //    writable: true,
            //    configurable: true
            //});
        }
    </script>*@
    <link rel="stylesheet" href="~/dist/vendor.css" asp-append-version="true" />
</head>
<body>
    @RenderBody()

    @RenderSection("scripts", required: false)
</body>
</html>
